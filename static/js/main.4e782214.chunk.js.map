{"version":3,"sources":["CustomInput.tsx","CustomButton.tsx","CustomMenu.tsx","CustomMenuItem.tsx","InitiativeTrackerEntry.tsx","InitiativeTracker.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["CustomInput","props","id","uniqueId","controlGroup","useRef","input","mounted","useEffect","current","value","undefined","document","activeElement","classList","remove","ref","className","htmlFor","label","fullWidth","type","defaultValue","onChange","onFocus","event","target","parentElement","add","onBlur","validity","valid","CustomButton","icon","clicked","secondary","onClick","aria-label","ariaLabel","children","CustomMenu","useState","active","setActive","activatorIcon","activatorSecondary","activatorContent","CustomMenuItem","InitiativeTrackerEntry","name","setName","hp","setHp","initiative","setinitiative","isGunReady","setIsGunReady","isEditMode","setIsEditMode","editedEntryName","setEditedEntryName","editedEntryHp","setEditedEntryHp","editedEntryInitiative","setEditedEntryInitiative","entryRef","useDrop","accept","hover","item","monitor","dragIndex","index","hoverIndex","hoverBoundingRect","getBoundingClientRect","hoverMiddleY","bottom","top","hoverClientY","getClientOffset","y","onMove","drop","useDrag","collect","isDragging","onToggleEditEntry","onEditEntry","onToggleGunReady","opacity","drag","key","data-id","style","Number","size","onRemoveEntry","bind","TrackerEntry","editMode","this","InitiativeTracker","idCounter","setIdCounter","newEntryName","setNewEntryName","newEntryHp","setNewEntryHp","newEntryInitiative","setNewEntryInitiative","entries","setEntries","removeEntry","filter","entry","toggleEditEntry","tempArray","find","toggleGunReady","filteredEntry","moveEntryUp","length","entryIndex","findIndex","shift","push","previousEntryIndex","splice","moveEntryDown","pop","unshift","nextEntryIndex","moveEntry","useCallback","dragEntry","update","$splice","sort","firstEntry","secondEntry","sortEntries","width","map","onMoveEntryUp","onMoveEntryDown","newEntry","HTML5toTouch","backends","backend","HTML5Backend","TouchBackend","preview","transition","TouchTransition","App","maxWidth","margin","DndProvider","MultiBackend","options","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4e782214.chunk.js","sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nimport './CustomInput.scss';\r\nimport uniqueId from 'lodash/uniqueId';\r\n\r\ninterface CustomInputProps {\r\n  label?: string,\r\n  defaultValue?: any,\r\n  value?: any,\r\n  type?: string,\r\n  fullWidth?: boolean,\r\n  onChange: (event: React.ChangeEvent<HTMLInputElement>) => void,\r\n}\r\n\r\nconst CustomInput: React.FC<CustomInputProps> = (props) => {\r\n  const id = `input_${uniqueId()}`;\r\n\r\n  const controlGroup = useRef<HTMLElement>(null);\r\n  const input = useRef<HTMLInputElement>(null);\r\n\r\n  const mounted = useRef(false);\r\n  useEffect(() => {\r\n    if (!mounted.current) {\r\n      mounted.current = true;\r\n    } else {\r\n      if (props.value === null || props.value === undefined || props.value === '' || props.value === 0) {\r\n        if (input.current !== document.activeElement) {\r\n          controlGroup.current!.classList.remove('control-group--is-active', 'control-group--has-text');\r\n        }\r\n      }\r\n    }\r\n  });\r\n\r\n  const focusInput = (event: React.FocusEvent<HTMLInputElement>) => {\r\n    event.target.parentElement!.classList.add('control-group--is-active');\r\n  }\r\n\r\n  const blurInput = (event: React.FocusEvent<HTMLInputElement>) => {\r\n    if ((event.target.value !== null && event.target.value !== undefined && event.target.value !== '') || !event.target.validity.valid) {\r\n      event.target.parentElement!.classList.add('control-group--has-text');\r\n    } else {\r\n      event.target.parentElement!.classList.remove('control-group--has-text');\r\n    }\r\n    event.target.parentElement!.classList.remove('control-group--is-active');\r\n\r\n    if (!event.target.validity.valid) {\r\n      event.target.parentElement!.classList.add('control-group--invalid');\r\n    } else {\r\n      event.target.parentElement!.classList.remove('control-group--invalid');\r\n    }\r\n  }\r\n\r\n  return (\r\n    <span ref={controlGroup} className=\"control-group\">\r\n      <label htmlFor={id} className=\"label\">{props.label}</label>\r\n      <input\r\n        ref={input}\r\n        id={id}\r\n        className={`input ${props.fullWidth ? 'input--is-full-width' : ''}`}\r\n        type={props.type || 'text'}\r\n        defaultValue={props.defaultValue}\r\n        value={props.value || (props.type === 'number' && !props.defaultValue ? '' : props.value)}\r\n        onChange={props.onChange}\r\n        onFocus={focusInput}\r\n        onBlur={blurInput}\r\n      >\r\n      </input>\r\n    </span>\r\n  );\r\n}\r\n\r\nexport default CustomInput;","import React from 'react';\r\nimport './CustomButton.scss';\r\n\r\ninterface CustomButtonProps {\r\n  icon?: boolean,\r\n  secondary?: boolean,\r\n  clicked?: boolean,\r\n  ariaLabel?: string,\r\n  onClick: () => void,\r\n}\r\n\r\nconst CustomButton: React.FC<CustomButtonProps> = (props) => {\r\n  return (\r\n    <button\r\n      className={`button ${props.icon ? 'button--icon' : ''}\r\n        ${props.clicked ? 'button--is-clicked' : ''}\r\n        ${props.secondary ? 'button--is-secondary' : ''}`}\r\n      onClick={props.onClick}\r\n      aria-label={props.ariaLabel}\r\n    >\r\n      {props.children}\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default CustomButton;","import React, { useState } from 'react';\r\nimport './CustomMenu.scss';\r\nimport './CustomButton.scss';\r\n\r\ninterface CustomMenuProps {\r\n  activatorIcon?: boolean,\r\n  activatorSecondary?: boolean,\r\n  activatorContent?: any,\r\n}\r\n\r\nconst CustomMenu: React.FC<CustomMenuProps> = (props) => {\r\n  const [active, setActive] = useState(false);\r\n\r\n  return (\r\n    <div className=\"menu\">\r\n      <div className=\"menu__activator\">\r\n        <button\r\n          className={`button ${props.activatorIcon ? 'button--icon' : ''}\r\n            ${active ? 'button--is-clicked' : ''}\r\n            ${props.activatorSecondary ? 'button--is-secondary' : ''}`\r\n          }\r\n          onClick={() => setActive(!active)}\r\n        >\r\n          {props.activatorContent}\r\n        </button>\r\n      </div>\r\n      <div className={`menu__content ${active ? 'menu__content--active' : ''}`}>\r\n        {props.children}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CustomMenu;","import React from 'react';\r\nimport './CustomMenuItem.scss';\r\n\r\ninterface CustomMenuItemProps {\r\n  clicked?: boolean,\r\n  onClick: () => void,\r\n}\r\n\r\nconst CustomMenuItem: React.FC<CustomMenuItemProps> = (props) => {\r\n  return (\r\n    <div\r\n      className={`menu-item ${props.clicked ? 'menu-item--is-clicked' : ''}`}\r\n      onClick={props.onClick}\r\n    >\r\n      {props.children}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CustomMenuItem;","import React, { useRef, useState } from 'react';\r\nimport './InitiativeTrackerEntry.scss';\r\n\r\nimport { GiPistolGun } from \"react-icons/gi\";\r\nimport { FaChevronDown } from \"react-icons/fa\";\r\nimport { FaTimes } from \"react-icons/fa\";\r\nimport { FaPen } from \"react-icons/fa\";\r\n\r\nimport CustomInput from './CustomInput';\r\nimport CustomButton from './CustomButton';\r\nimport CustomMenu from './CustomMenu';\r\nimport CustomMenuItem from './CustomMenuItem';\r\n\r\nimport { useDrag, useDrop, DropTargetMonitor } from 'react-dnd';\r\nimport { XYCoord } from 'dnd-core';\r\n\r\ninterface DragItem {\r\n  index: number;\r\n  id: number;\r\n  type: string;\r\n}\r\n\r\ninterface InitiativeTrackerEntryProps {\r\n  id: number;\r\n  index: number;\r\n  name: string;\r\n  hp: string;\r\n  initiative: number;\r\n  isGunReady: boolean;\r\n\r\n  onToggleGunReady: (id: number) => void;\r\n  onEditEntry: (id: number, name: string, hp: string, initiative: number, isGunReady: boolean) => void;\r\n  onRemoveEntry: (id: number) => void;\r\n  onMoveEntryUp: (id: number) => void;\r\n  onMoveEntryDown: (id: number) => void;\r\n  onMove: (dragIndex: number, hoverIndex: number) => void;\r\n}\r\n\r\nconst InitiativeTrackerEntry: React.FC<InitiativeTrackerEntryProps> = (props) => {\r\n  const isGunReadyInitiative = 50;\r\n\r\n  const [name, setName] = useState(props.name);\r\n  const [hp, setHp] = useState(props.hp);\r\n  const [initiative, setinitiative] = useState(props.initiative);\r\n  const [isGunReady, setIsGunReady] = useState(props.isGunReady);\r\n\r\n  const [isEditMode, setIsEditMode] = useState(false);\r\n  const [editedEntryName, setEditedEntryName] = useState('');\r\n  const [editedEntryHp, setEditedEntryHp] = useState('');\r\n  const [editedEntryInitiative, setEditedEntryInitiative] = useState(0);\r\n\r\n  const entryRef = useRef<HTMLDivElement>(null);\r\n\r\n  const [, drop] = useDrop({\r\n    accept: 'InitiativeTrackerEntry',\r\n    hover(item: DragItem, monitor: DropTargetMonitor) {\r\n      if (!entryRef.current) {\r\n        return;\r\n      }\r\n      const dragIndex = item.index;\r\n      const hoverIndex = props.index;\r\n\r\n      if (dragIndex === hoverIndex) {\r\n        return;\r\n      }\r\n\r\n      const hoverBoundingRect = entryRef.current!.getBoundingClientRect();\r\n\r\n      // Get vertical middle\r\n      const hoverMiddleY = (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2;\r\n\r\n      const clientOffset = monitor.getClientOffset();\r\n\r\n      const hoverClientY = (clientOffset as XYCoord).y - hoverBoundingRect.top;\r\n\r\n      // Dragging downwards\r\n      if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\r\n        return;\r\n      }\r\n\r\n      // Dragging upwards\r\n      if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\r\n        return;\r\n      }\r\n\r\n      props.onMove(dragIndex, hoverIndex);\r\n      item.index = hoverIndex;\r\n    },\r\n  })\r\n\r\n  const [{ isDragging }, drag] = useDrag({\r\n    item: { type: 'InitiativeTrackerEntry', index: props.index, id: props.id },\r\n    collect: (monitor: any) => ({\r\n      isDragging: monitor.isDragging(),\r\n    }),\r\n  })\r\n\r\n  const onToggleEditEntry = () => {\r\n    if (isEditMode) {\r\n      setName(editedEntryName);\r\n      setHp(editedEntryHp);\r\n      setinitiative(editedEntryInitiative);\r\n      setIsEditMode(!isEditMode);\r\n      props.onEditEntry(props.id, editedEntryName, editedEntryHp, editedEntryInitiative, props.isGunReady);\r\n    } else {\r\n      setIsEditMode(!isEditMode);\r\n      setEditedEntryName(props.name);\r\n      setEditedEntryHp(props.hp);\r\n      setEditedEntryInitiative(props.initiative);\r\n    }\r\n  }\r\n\r\n  const onToggleGunReady = () => {\r\n    props.onToggleGunReady(props.id);\r\n    setIsGunReady(!isGunReady);\r\n  }\r\n\r\n  const opacity = isDragging ? 0 : 1;\r\n\r\n  drag(drop(entryRef));\r\n\r\n  return (\r\n    <div\r\n      ref={entryRef}\r\n      className=\"initiative-tracker__entry\"\r\n      key={props.id}\r\n      data-id={props.id}\r\n      id={`entry_${props.id}`}\r\n      style={{opacity}}\r\n    >\r\n      <div className=\"initiative-tracker__name-column\">\r\n        <div className=\"initiative-tracker__column-label\">Name</div>\r\n        <div>\r\n          {(() => {\r\n            if (!isEditMode) {\r\n              return name;\r\n            } else {\r\n              return (\r\n                <CustomInput\r\n                  fullWidth\r\n                  type=\"text\"\r\n                  defaultValue={name}\r\n                  onChange={(event: React.ChangeEvent<HTMLInputElement>) => setEditedEntryName(event.target.value)}\r\n                />\r\n              );\r\n            }\r\n          })()}\r\n        </div>\r\n      </div>\r\n      <div className=\"initiative-tracker__hp-column\">\r\n        <div className=\"initiative-tracker__column-label\">HP</div>\r\n        <div>\r\n          {(() => {\r\n            if (!isEditMode) {\r\n              return hp;\r\n            } else {\r\n              return (\r\n                <CustomInput\r\n                  fullWidth\r\n                  type=\"text\"\r\n                  defaultValue={hp}\r\n                  onChange={(event: React.ChangeEvent<HTMLInputElement>) => setEditedEntryHp(event.target.value)}\r\n                />\r\n              );\r\n            }\r\n          })()}\r\n        </div>\r\n      </div>\r\n      <div className=\"initiative-tracker__initiative-column\">\r\n        <div className=\"initiative-tracker__column-label\">Initiative</div>\r\n        <div>\r\n          {(() => {\r\n            if (!isEditMode) {\r\n              return isGunReady ? `${initiative} (+${isGunReadyInitiative})` : initiative;\r\n            } else {\r\n              return (\r\n                <CustomInput\r\n                  fullWidth\r\n                  type=\"number\"\r\n                  defaultValue={initiative}\r\n                  onChange={(event: React.ChangeEvent<HTMLInputElement>) => setEditedEntryInitiative(Number(event.target.value))}\r\n                />\r\n              );\r\n            }\r\n          })()}\r\n        </div>\r\n      </div>\r\n      <div className=\"initiative-tracker__actions-column\">\r\n        <div className=\"initiative-tracker__actions-container initiative-tracker__actions-container--desktop-only\">\r\n          {/* <CustomButtonGroup>\r\n            <CustomButton\r\n              icon\r\n              secondary\r\n              onClick={props.onMoveEntryUp.bind(undefined, props.id)}\r\n              ariaLabel=\"Move up\"\r\n            >\r\n              <FaChevronUp />\r\n            </CustomButton>\r\n            <CustomButton\r\n              icon\r\n              secondary\r\n              onClick={props.onMoveEntryDown.bind(undefined, props.id)}\r\n              ariaLabel=\"Move down\"\r\n            >\r\n              <FaChevronDown />\r\n            </CustomButton>\r\n          </CustomButtonGroup> */}\r\n          <CustomButton\r\n            icon\r\n            secondary\r\n            clicked={isGunReady}\r\n            onClick={onToggleGunReady}\r\n            ariaLabel=\"Gun ready\"\r\n          >\r\n            <GiPistolGun size=\"1.75em\" />\r\n          </CustomButton>\r\n          <CustomButton\r\n            icon\r\n            secondary\r\n            clicked={isEditMode}\r\n            onClick={onToggleEditEntry}\r\n            ariaLabel=\"Edit mode\"\r\n          >\r\n            <FaPen size=\"1.25em\" />\r\n          </CustomButton>\r\n          <CustomButton\r\n            icon\r\n            secondary\r\n            onClick={props.onRemoveEntry.bind(undefined, props.id)}\r\n            ariaLabel=\"Remove entry\"\r\n          >\r\n            <FaTimes size=\"1.25em\" />\r\n          </CustomButton>\r\n        </div>\r\n        <div className=\"initiative-tracker__actions-container initiative-tracker__actions-container--mobile-only\">\r\n          {/* <CustomButtonGroup>\r\n            <CustomButton\r\n              icon\r\n              secondary\r\n              onClick={props.onMoveEntryUp.bind({}, props.id)}\r\n              ariaLabel=\"Move up\"\r\n            >\r\n              <FaChevronUp />\r\n            </CustomButton>\r\n            <CustomButton\r\n              icon\r\n              secondary\r\n              onClick={props.onMoveEntryDown.bind({}, props.id)}\r\n              ariaLabel=\"Move down\"\r\n            >\r\n              <FaChevronDown />\r\n            </CustomButton>\r\n          </CustomButtonGroup> */}\r\n          <CustomMenu\r\n            activatorIcon\r\n            activatorSecondary\r\n            activatorContent={<FaChevronDown size=\"1.25em\" />}\r\n          >\r\n            <CustomMenuItem\r\n              onClick={onToggleGunReady}\r\n              clicked={isGunReady}\r\n            >\r\n              Gun\r\n            </CustomMenuItem>\r\n            <CustomMenuItem\r\n              onClick={onToggleEditEntry}\r\n              clicked={isEditMode}\r\n            >\r\n              Edit\r\n            </CustomMenuItem>\r\n            <CustomMenuItem\r\n              onClick={props.onRemoveEntry.bind(undefined, props.id)}\r\n            >\r\n              Delete\r\n            </CustomMenuItem>\r\n          </CustomMenu>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InitiativeTrackerEntry;","import React, { useState, useCallback } from 'react';\r\nimport './InitiativeTracker.scss';\r\n\r\nimport { FaLongArrowAltDown } from \"react-icons/fa\";\r\nimport { FaSortAmountDown } from \"react-icons/fa\";\r\nimport { FaTimes } from \"react-icons/fa\";\r\nimport { FaPlus } from \"react-icons/fa\";\r\n\r\nimport CustomInput from './CustomInput';\r\nimport CustomButton from './CustomButton';\r\nimport InitiativeTrackerEntry from './InitiativeTrackerEntry';\r\nimport update from 'immutability-helper';\r\n\r\nclass TrackerEntry {\r\n  id: number;\r\n  name: string;\r\n  hp: string;\r\n  initiative: number;\r\n  isGunReady: boolean;\r\n  editMode: boolean;\r\n\r\n  constructor(id: number, name: string, hp: string, initiative: number) {\r\n    this.id = id;\r\n    this.name = name;\r\n    this.hp = hp;\r\n    this.initiative = initiative;\r\n    this.isGunReady = false;\r\n    this.editMode = false;\r\n  }\r\n}\r\n\r\nconst InitiativeTracker: React.FC = () => {\r\n  const isGunReadyInitiative = 50;\r\n\r\n  const [idCounter, setIdCounter] = useState(0);\r\n  const [newEntryName, setNewEntryName] = useState('');\r\n  const [newEntryHp, setNewEntryHp] = useState('');\r\n  const [newEntryInitiative, setNewEntryInitiative] = useState(0);\r\n  const [editedEntryName, setEditedEntryName] = useState('');\r\n  const [editedEntryHp, setEditedEntryHp] = useState('');\r\n  const [editedEntryInitiative, setEditedEntryInitiative] = useState(0);\r\n  const [entries, setEntries] = useState<TrackerEntry[]>([]);\r\n\r\n  const handleTurn = () => {\r\n    if (entries.length > 0) {\r\n      let tempArray = [...entries];\r\n      let entry = tempArray.shift()!;\r\n      tempArray.push(entry);\r\n      setEntries(tempArray);\r\n    }\r\n  }\r\n\r\n  const sortEntries = (entries: TrackerEntry[]) => {\r\n    if (entries.length > 0) {\r\n      return [...entries].sort((firstEntry: TrackerEntry, secondEntry: TrackerEntry) => {\r\n        return (secondEntry.initiative + (secondEntry.isGunReady ? isGunReadyInitiative : 0)) - (firstEntry.initiative + (firstEntry.isGunReady ? isGunReadyInitiative : 0));\r\n      });\r\n    } else {\r\n      return entries;\r\n    }\r\n  }\r\n\r\n  const addEntry = () => {\r\n    if (newEntryName && newEntryInitiative) {\r\n      let newEntry = new TrackerEntry(idCounter, newEntryName, newEntryHp, newEntryInitiative);\r\n      let tempArray = [...entries, newEntry];\r\n\r\n      setEntries(tempArray);\r\n      setNewEntryName('');\r\n      setNewEntryHp('');\r\n      setNewEntryInitiative(0);\r\n      setIdCounter(idCounter + 1);\r\n    }\r\n  }\r\n\r\n  const removeEntry = (id: number) => {\r\n    setEntries(entries.filter((entry: TrackerEntry) => {\r\n      return entry.id !== id;\r\n    }))\r\n  }\r\n\r\n  const toggleEditEntry = (id: number) => {\r\n    let tempArray = [...entries];\r\n    let entry = tempArray.find((entry: TrackerEntry) => {\r\n      return entry.id === id;\r\n    })!;\r\n\r\n    if (entry.editMode) {\r\n      entry.name = editedEntryName;\r\n      entry.hp = editedEntryHp;\r\n      entry.initiative = editedEntryInitiative;\r\n      entry.editMode = !entry.editMode;\r\n      setEntries(tempArray);\r\n    } else {\r\n      entry.editMode = !entry.editMode;\r\n      setEditedEntryName(entry.name);\r\n      setEditedEntryHp(entry.hp);\r\n      setEditedEntryInitiative(entry.initiative);\r\n    }\r\n  }\r\n\r\n  const toggleGunReady = (id: number) => {\r\n    let tempArray = [...entries];\r\n    let filteredEntry = tempArray.find((entry: TrackerEntry) => {\r\n      return entry.id === id;\r\n    })!;\r\n    filteredEntry.isGunReady = !filteredEntry.isGunReady;\r\n    setEntries(tempArray);\r\n  }\r\n\r\n  const moveEntryUp = (id: number) => {\r\n    if (entries.length >= 2) {\r\n      let tempArray: TrackerEntry[] = [...entries];\r\n      let entryIndex: number = entries.findIndex((entry: TrackerEntry) => {\r\n        return entry.id === id;\r\n      });\r\n      if (entryIndex === -1) {\r\n        return;\r\n      } else if (entryIndex === 0) {\r\n        let entry = tempArray.shift()!;\r\n        tempArray.push(entry);\r\n      } else {\r\n        let previousEntryIndex: number = entryIndex - 1;\r\n        let entry = tempArray.splice(entryIndex, 1);\r\n        tempArray.splice(previousEntryIndex, 0, entry[0]);\r\n      }\r\n      setEntries(tempArray);\r\n    }\r\n  }\r\n\r\n  const moveEntryDown = (id: number) => {\r\n    if (entries.length >= 2) {\r\n      if (entries.length >= 2) {\r\n        let tempArray: TrackerEntry[] = [...entries];\r\n        let entryIndex: number = entries.findIndex((entry: TrackerEntry) => {\r\n          return entry.id === id;\r\n        });\r\n        if (entryIndex === -1) {\r\n          return;\r\n        } else if (entryIndex === entries.length - 1) {\r\n          let entry = tempArray.pop()!;\r\n          tempArray.unshift(entry);\r\n        } else {\r\n          let nextEntryIndex: number = entryIndex + 1;\r\n          let entry = tempArray.splice(nextEntryIndex, 1);\r\n          tempArray.splice(entryIndex, 0, entry[0]);\r\n        }\r\n        setEntries(tempArray);\r\n      }\r\n    }\r\n  }\r\n\r\n  const moveEntry = useCallback(\r\n    (dragIndex: number, hoverIndex: number) => {\r\n      const dragEntry = entries[dragIndex];\r\n      setEntries(\r\n        update(entries, {\r\n          $splice: [\r\n            [dragIndex, 1],\r\n            [hoverIndex, 0, dragEntry],\r\n          ],\r\n        }),\r\n      )\r\n    },\r\n    [entries],\r\n  )\r\n\r\n  return (\r\n    <div className=\"initiative-tracker\">\r\n      <div className=\"initiative-tracker__header\">\r\n        <span className=\"initiative-tracker__header-title\">Initiative Tracker</span>\r\n        <CustomButton\r\n          icon\r\n          ariaLabel=\"Turn\"\r\n          onClick={handleTurn}\r\n        >\r\n          <FaLongArrowAltDown size=\"1.25em\" />\r\n        </CustomButton>\r\n        <CustomButton\r\n          icon\r\n          ariaLabel=\"Sort\"\r\n          onClick={() => setEntries(sortEntries(entries))}\r\n        >\r\n          <FaSortAmountDown size=\"1.25em\" />\r\n        </CustomButton>\r\n        <CustomButton\r\n          icon\r\n          ariaLabel=\"Clear\"\r\n          onClick={() => setEntries([])}\r\n        >\r\n          <FaTimes size=\"1.25em\" />\r\n        </CustomButton>\r\n      </div>\r\n      <div className=\"initiative-tracker__body\">\r\n        {(() => {\r\n          if (entries.length > 0) {\r\n            return (\r\n              <div style={{width: '100%'}}>\r\n                <div className=\"initiative-tracker__data\">\r\n                  {entries\r\n                    .map((entry: TrackerEntry, index: number) => {\r\n                      return (\r\n                        <InitiativeTrackerEntry\r\n                          key={entry.id}\r\n                          id={entry.id}\r\n                          index={index}\r\n                          name={entry.name}\r\n                          hp={entry.hp}\r\n                          initiative={entry.initiative}\r\n                          isGunReady={entry.isGunReady}\r\n                          onToggleGunReady={toggleGunReady}\r\n                          onEditEntry={toggleEditEntry}\r\n                          onRemoveEntry={removeEntry}\r\n                          onMoveEntryUp={moveEntryUp}\r\n                          onMoveEntryDown={moveEntryDown}\r\n                          onMove={moveEntry}\r\n                        />\r\n                      )\r\n                    })\r\n                  }\r\n                </div>\r\n              </div>\r\n            );\r\n          } else {\r\n            return <div className=\"initiative-tracker__no-data\">No Data</div>\r\n          }\r\n        })()}\r\n      </div>\r\n      <div className=\"initiative-tracker__footer\">\r\n        <CustomInput\r\n          label=\"Name\"\r\n          type=\"text\"\r\n          value={newEntryName}\r\n          onChange={(event: React.ChangeEvent<HTMLInputElement>) => setNewEntryName(event.target.value)}\r\n        />\r\n        <CustomInput\r\n          label=\"HP\"\r\n          type=\"text\"\r\n          value={newEntryHp}\r\n          onChange={(event: React.ChangeEvent<HTMLInputElement>) => setNewEntryHp(event.target.value)}\r\n        />\r\n        <CustomInput\r\n          label=\"Initiative\"\r\n          type=\"number\"\r\n          value={newEntryInitiative}\r\n          onChange={(event: React.ChangeEvent<HTMLInputElement>) => setNewEntryInitiative(Number(event.target.value))}\r\n        />\r\n        <CustomButton\r\n          icon\r\n          onClick={addEntry}\r\n          ariaLabel=\"Add record\"\r\n        >\r\n          <FaPlus size=\"1.25em\"/>\r\n        </CustomButton>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InitiativeTracker;\r\n","import React from 'react';\r\n\r\nimport { DndProvider } from 'react-dnd';\r\n\r\nimport HTML5Backend from 'react-dnd-html5-backend';\r\nimport TouchBackend from 'react-dnd-touch-backend';\r\nimport MultiBackend, { TouchTransition } from 'react-dnd-multi-backend';\r\n\r\nimport InitiativeTracker from './InitiativeTracker';\r\n\r\nconst HTML5toTouch = {\r\n  backends: [\r\n    {\r\n      backend: HTML5Backend\r\n    },\r\n    {\r\n      backend: TouchBackend, // Note that you can call your backends with options\r\n      preview: true,\r\n      transition: TouchTransition\r\n    }\r\n  ]\r\n};\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    <div style={{maxWidth: 700, margin: 'auto'}}>\r\n      <DndProvider backend={MultiBackend} options={HTML5toTouch}>\r\n        <InitiativeTracker />\r\n      </DndProvider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}