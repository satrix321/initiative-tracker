{"version":3,"sources":["CustomInput.tsx","CustomButton.tsx","CustomMenu.tsx","CustomMenuItem.tsx","InitiativeTrackerEntry.tsx","InitiativeTracker.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["CustomInput","props","id","uniqueId","controlGroup","useRef","input","mounted","useEffect","current","value","undefined","document","activeElement","classList","remove","ref","className","htmlFor","label","fullWidth","type","defaultValue","onChange","onFocus","event","target","parentElement","add","onBlur","validity","valid","CustomButton","icon","clicked","secondary","disabled","onClick","aria-label","title","children","CustomMenu","useState","active","setActive","componentRef","handleWindowClickRef","contains","window","removeEventListener","activatorIcon","activatorSecondary","stopPropagation","addEventListener","activatorContent","CustomMenuItem","InitiativeTrackerEntry","isEditMode","setIsEditMode","name","editedEntryName","setEditedEntryName","hp","editedEntryHp","setEditedEntryHp","initiative","editedEntryInitiative","setEditedEntryInitiative","entryRef","useDrop","accept","hover","item","monitor","dragIndex","index","hoverIndex","hoverBoundingRect","getBoundingClientRect","hoverMiddleY","bottom","top","hoverClientY","getClientOffset","y","onMove","drop","useDrag","collect","isDragging","drag","onToggleEditEntry","onEditEntry","onToggleGunReady","opacity","key","data-id","style","Number","isGunReady","gunReadinessEnabled","size","onRemoveEntry","bind","TrackerEntry","this","InitiativeTracker","initialEntries","initialIdCounter","localStorageEntries","localStorage","getItem","JSON","parse","localStorageIdCounter","setGunReadinessEnabled","idCounter","setIdCounter","newEntryName","setNewEntryName","newEntryHp","setNewEntryHp","newEntryInitiative","setNewEntryInitiative","entries","setEntries","removeEntry","tempArray","filter","entry","setItem","stringify","toggleEditEntry","find","toggleGunReady","filteredEntry","moveEntryUp","length","entryIndex","findIndex","shift","push","previousEntryIndex","splice","moveEntryDown","pop","unshift","nextEntryIndex","moveEntry","useCallback","dragEntry","update","$splice","sort","firstEntry","secondEntry","sortEntries","width","map","onMoveEntryUp","onMoveEntryDown","Boolean","newEntry","String","HTML5toTouch","backends","backend","HTML5Backend","TouchBackend","preview","transition","TouchTransition","App","maxWidth","margin","DndProvider","MultiBackend","options","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.94214c51.chunk.js","sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport './CustomInput.scss';\nimport uniqueId from 'lodash/uniqueId';\n\ninterface CustomInputProps {\n  label?: string,\n  defaultValue?: any,\n  value?: any,\n  type?: string,\n  fullWidth?: boolean,\n  onChange: (event: React.ChangeEvent<HTMLInputElement>) => void,\n}\n\nconst CustomInput: React.FC<CustomInputProps> = (props) => {\n  const id = `input_${uniqueId()}`;\n\n  const controlGroup = useRef<HTMLElement>(null);\n  const input = useRef<HTMLInputElement>(null);\n\n  const mounted = useRef(false);\n  useEffect(() => {\n    if (!mounted.current) {\n      mounted.current = true;\n    } else {\n      if (props.value === null || props.value === undefined || props.value === '' || props.value === 0) {\n        if (input.current !== document.activeElement) {\n          controlGroup.current!.classList.remove('control-group--is-active', 'control-group--has-text');\n        }\n      }\n    }\n  });\n\n  const focusInput = (event: React.FocusEvent<HTMLInputElement>) => {\n    event.target.parentElement!.classList.add('control-group--is-active');\n  }\n\n  const blurInput = (event: React.FocusEvent<HTMLInputElement>) => {\n    if ((event.target.value !== null && event.target.value !== undefined && event.target.value !== '') || !event.target.validity.valid) {\n      event.target.parentElement!.classList.add('control-group--has-text');\n    } else {\n      event.target.parentElement!.classList.remove('control-group--has-text');\n    }\n    event.target.parentElement!.classList.remove('control-group--is-active');\n\n    if (!event.target.validity.valid) {\n      event.target.parentElement!.classList.add('control-group--invalid');\n    } else {\n      event.target.parentElement!.classList.remove('control-group--invalid');\n    }\n  }\n\n  return (\n    <span ref={controlGroup} className=\"control-group\">\n      <label htmlFor={id} className=\"label\">{props.label}</label>\n      <input\n        ref={input}\n        id={id}\n        className={`input ${props.fullWidth ? 'input--is-full-width' : ''}`}\n        type={props.type || 'text'}\n        defaultValue={props.defaultValue}\n        value={props.value || (props.type === 'number' && !props.defaultValue ? '' : props.value)}\n        onChange={props.onChange}\n        onFocus={focusInput}\n        onBlur={blurInput}\n      >\n      </input>\n    </span>\n  );\n}\n\nexport default CustomInput;","import React from 'react';\nimport './CustomButton.scss';\n\ninterface CustomButtonProps {\n  icon?: boolean,\n  secondary?: boolean,\n  clicked?: boolean,\n  disabled?: boolean,\n  title?: string,\n  onClick: () => void,\n}\n\nconst CustomButton: React.FC<CustomButtonProps> = (props) => {\n  return (\n    <button\n      className={`button ${props.icon ? 'button--icon' : ''}\n        ${props.clicked ? 'button--is-clicked' : ''}\n        ${props.secondary ? 'button--is-secondary' : ''}\n        ${props.disabled ? 'button--is-disabled' : ''}\n      `}\n      onClick={props.onClick}\n      aria-label={props.title}\n      disabled={props.disabled}\n      title={props.title}\n    >\n      {props.children}\n    </button>\n  );\n}\n\nexport default CustomButton;","import React, { useRef, useState } from 'react';\nimport './CustomMenu.scss';\nimport './CustomButton.scss';\n\ninterface CustomMenuProps {\n  activatorIcon?: boolean,\n  activatorSecondary?: boolean,\n  activatorContent?: any,\n}\n\nconst CustomMenu: React.FC<CustomMenuProps> = (props) => {\n  const [active, setActive] = useState(false);\n\n  const componentRef = useRef<HTMLDivElement>(null);\n  const handleWindowClickRef = useRef((event: MouseEvent) => {\n    let clickedOutside = !((componentRef.current as HTMLElement === event.target as HTMLElement) || \n      (componentRef.current as HTMLElement).contains(event.target as HTMLElement));\n\n    if (clickedOutside) {\n      setActive(false);\n      window.removeEventListener('click', handleWindowClickRef.current, false);\n    }\n  });\n\n  const onMenuClick = (event: React.MouseEvent<HTMLElement>) => {\n    event.stopPropagation();\n    if (!active) {\n      window.addEventListener('click', handleWindowClickRef.current, false);\n    } else {\n      window.removeEventListener('click', handleWindowClickRef.current, false);\n    }\n    setActive(!active);\n  };\n\n  return (\n    <div ref={componentRef} className=\"menu\">\n      <div className=\"menu__activator\">\n        <button\n          className={`button ${props.activatorIcon ? 'button--icon' : ''}\n            ${active ? 'button--is-clicked' : ''}\n            ${props.activatorSecondary ? 'button--is-secondary' : ''}`\n          }\n          onClick={onMenuClick}\n        >\n          {props.activatorContent}\n        </button>\n      </div>\n      <div className={`menu__content ${active ? 'menu__content--active' : ''}`}>\n        {props.children}\n      </div>\n    </div>\n  );\n}\n\nexport default CustomMenu;","import React from 'react';\nimport './CustomMenuItem.scss';\n\ninterface CustomMenuItemProps {\n  clicked?: boolean,\n  onClick: () => void,\n}\n\nconst CustomMenuItem: React.FC<CustomMenuItemProps> = (props) => {\n  return (\n    <div\n      className={`menu-item ${props.clicked ? 'menu-item--is-clicked' : ''}`}\n      onClick={props.onClick}\n    >\n      {props.children}\n    </div>\n  );\n}\n\nexport default CustomMenuItem;","import React, { useRef, useState } from 'react';\nimport './InitiativeTrackerEntry.scss';\n\nimport { GiPistolGun } from \"react-icons/gi\";\nimport { FaChevronDown } from \"react-icons/fa\";\nimport { FaTimes } from \"react-icons/fa\";\nimport { FaPen } from \"react-icons/fa\";\n\nimport CustomInput from './CustomInput';\nimport CustomButton from './CustomButton';\nimport CustomMenu from './CustomMenu';\nimport CustomMenuItem from './CustomMenuItem';\n\nimport { useDrag, useDrop, DropTargetMonitor } from 'react-dnd';\nimport { XYCoord } from 'dnd-core';\n\ninterface DragItem {\n  index: number;\n  id: number;\n  type: string;\n}\n\ninterface InitiativeTrackerEntryProps {\n  id: number;\n  index: number;\n  name: string;\n  hp: string;\n  initiative: number;\n  isGunReady: boolean;\n  gunReadinessEnabled: boolean;\n\n  onToggleGunReady: (id: number) => void;\n  onEditEntry: (id: number, name: string, hp: string, initiative: number) => void;\n  onRemoveEntry: (id: number) => void;\n  onMoveEntryUp: (id: number) => void;\n  onMoveEntryDown: (id: number) => void;\n  onMove: (dragIndex: number, hoverIndex: number) => void;\n}\n\nconst InitiativeTrackerEntry: React.FC<InitiativeTrackerEntryProps> = (props) => {\n  const isGunReadyInitiative = 50;\n\n  const [isEditMode, setIsEditMode] = useState(false);\n  const [editedEntryName, setEditedEntryName] = useState(props.name);\n  const [editedEntryHp, setEditedEntryHp] = useState(props.hp);\n  const [editedEntryInitiative, setEditedEntryInitiative] = useState(props.initiative);\n\n  const entryRef = useRef<HTMLDivElement>(null);\n\n  const [, drop] = useDrop({\n    accept: 'InitiativeTrackerEntry',\n    hover(item: DragItem, monitor: DropTargetMonitor) {\n      if (!entryRef.current) {\n        return;\n      }\n      const dragIndex = item.index;\n      const hoverIndex = props.index;\n\n      if (dragIndex === hoverIndex) {\n        return;\n      }\n\n      const hoverBoundingRect = entryRef.current!.getBoundingClientRect();\n\n      // Get vertical middle\n      const hoverMiddleY = (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2;\n\n      const clientOffset = monitor.getClientOffset();\n\n      const hoverClientY = (clientOffset as XYCoord).y - hoverBoundingRect.top;\n\n      // Dragging downwards\n      if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\n        return;\n      }\n\n      // Dragging upwards\n      if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\n        return;\n      }\n\n      props.onMove(dragIndex, hoverIndex);\n      item.index = hoverIndex;\n    },\n  })\n\n  const [{ isDragging }, drag] = useDrag({\n    item: { type: 'InitiativeTrackerEntry', index: props.index, id: props.id },\n    collect: (monitor: any) => ({\n      isDragging: monitor.isDragging(),\n    }),\n  })\n\n  const onToggleEditEntry = () => {\n    if (isEditMode) {\n      setIsEditMode(!isEditMode);\n      props.onEditEntry(props.id, editedEntryName, editedEntryHp, editedEntryInitiative);\n    } else {\n      setIsEditMode(!isEditMode);\n    }\n  }\n\n  const onToggleGunReady = () => {\n    props.onToggleGunReady(props.id);\n  }\n\n  const opacity = isDragging ? 0.5 : 1;\n\n  drag(drop(entryRef));\n\n  return (\n    <div\n      ref={entryRef}\n      className=\"initiative-tracker__entry\"\n      key={props.id}\n      data-id={props.id}\n      id={`entry_${props.id}`}\n      style={{opacity}}\n    >\n      <div className=\"initiative-tracker__name-column\">\n        <div className=\"initiative-tracker__column-label\">Name</div>\n        <div>\n          {(() => {\n            if (!isEditMode) {\n              return props.name;\n            } else {\n              return (\n                <CustomInput\n                  fullWidth\n                  type=\"text\"\n                  defaultValue={props.name}\n                  onChange={(event: React.ChangeEvent<HTMLInputElement>) => setEditedEntryName(event.target.value)}\n                />\n              );\n            }\n          })()}\n        </div>\n      </div>\n      <div className=\"initiative-tracker__hp-column\">\n        <div className=\"initiative-tracker__column-label\">HP</div>\n        <div>\n          {(() => {\n            if (!isEditMode) {\n              return props.hp;\n            } else {\n              return (\n                <CustomInput\n                  fullWidth\n                  type=\"text\"\n                  defaultValue={props.hp}\n                  onChange={(event: React.ChangeEvent<HTMLInputElement>) => setEditedEntryHp(event.target.value)}\n                />\n              );\n            }\n          })()}\n        </div>\n      </div>\n      <div className=\"initiative-tracker__initiative-column\">\n        <div className=\"initiative-tracker__column-label\">Initiative</div>\n        <div>\n          {(() => {\n            if (!isEditMode) {\n              return props.isGunReady && props.gunReadinessEnabled ? `${props.initiative} (+${isGunReadyInitiative})` : props.initiative;\n            } else {\n              return (\n                <CustomInput\n                  fullWidth\n                  type=\"number\"\n                  defaultValue={props.initiative}\n                  onChange={(event: React.ChangeEvent<HTMLInputElement>) => setEditedEntryInitiative(Number(event.target.value))}\n                />\n              );\n            }\n          })()}\n        </div>\n      </div>\n      <div className=\"initiative-tracker__actions-column\">\n        <div className=\"initiative-tracker__actions-container initiative-tracker__actions-container--desktop-only\">\n          {(() => {\n            if (props.gunReadinessEnabled) {\n              return (\n                <CustomButton\n                  icon\n                  secondary\n                  clicked={props.isGunReady}\n                  onClick={onToggleGunReady}\n                  title=\"Gun ready\"\n                >\n                  <GiPistolGun size=\"1.75em\" />\n                </CustomButton>\n              );\n            } else {\n              return <></>\n            }\n          })()}\n          <CustomButton\n            icon\n            secondary\n            clicked={isEditMode}\n            onClick={onToggleEditEntry}\n            title=\"Edit mode\"\n          >\n            <FaPen size=\"1.25em\" />\n          </CustomButton>\n          <CustomButton\n            icon\n            secondary\n            onClick={props.onRemoveEntry.bind(undefined, props.id)}\n            title=\"Remove entry\"\n          >\n            <FaTimes size=\"1.25em\" />\n          </CustomButton>\n        </div>\n        <div className=\"initiative-tracker__actions-container initiative-tracker__actions-container--mobile-only\">\n          <CustomMenu\n            activatorIcon\n            activatorSecondary\n            activatorContent={<FaChevronDown size=\"1.25em\" />}\n          >\n            {(() => {\n              if (props.gunReadinessEnabled) {\n                return (\n                  <CustomMenuItem\n                    onClick={onToggleGunReady}\n                    clicked={props.isGunReady}\n                  >\n                    Gun\n                  </CustomMenuItem>\n                );\n              }\n            })()}\n            <CustomMenuItem\n              onClick={onToggleEditEntry}\n              clicked={isEditMode}\n            >\n              Edit\n            </CustomMenuItem>\n            <CustomMenuItem\n              onClick={props.onRemoveEntry.bind(undefined, props.id)}\n            >\n              Delete\n            </CustomMenuItem>\n          </CustomMenu>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default InitiativeTrackerEntry;","import React, { useState, useCallback } from 'react';\r\nimport './InitiativeTracker.scss';\r\n\r\nimport { FaLongArrowAltDown } from \"react-icons/fa\";\r\nimport { FaSortAmountDown } from \"react-icons/fa\";\r\nimport { FaTimes } from \"react-icons/fa\";\r\nimport { FaPlus } from \"react-icons/fa\";\r\nimport { FaCog } from \"react-icons/fa\";\r\n\r\nimport CustomInput from './CustomInput';\r\nimport CustomButton from './CustomButton';\r\nimport CustomMenu from './CustomMenu';\r\nimport CustomMenuItem from './CustomMenuItem';\r\nimport InitiativeTrackerEntry from './InitiativeTrackerEntry';\r\n\r\nimport update from 'immutability-helper';\r\n\r\nclass TrackerEntry {\r\n  id: number;\r\n  name: string;\r\n  hp: string;\r\n  initiative: number;\r\n  isGunReady: boolean;\r\n\r\n  constructor(id: number, name: string, hp: string, initiative: number) {\r\n    this.id = id;\r\n    this.name = name;\r\n    this.hp = hp;\r\n    this.initiative = initiative;\r\n    this.isGunReady = false;\r\n  }\r\n}\r\n\r\nconst InitiativeTracker: React.FC = () => {\r\n  const isGunReadyInitiative = 50;\r\n\r\n  let initialEntries: TrackerEntry[] = [];\r\n  let initialIdCounter = 0;\r\n\r\n  const localStorageEntries = window.localStorage.getItem('trackerEntries');\r\n  if (localStorageEntries) {\r\n    initialEntries = JSON.parse(localStorageEntries);\r\n  }\r\n  const localStorageIdCounter = window.localStorage.getItem('trackerIdCounter');\r\n  if (localStorageIdCounter) {\r\n    initialIdCounter = Number(localStorageIdCounter);\r\n  }\r\n\r\n  const [gunReadinessEnabled, setGunReadinessEnabled] = useState(false);\r\n  const [idCounter, setIdCounter] = useState(initialIdCounter);\r\n  const [newEntryName, setNewEntryName] = useState('');\r\n  const [newEntryHp, setNewEntryHp] = useState('');\r\n  const [newEntryInitiative, setNewEntryInitiative] = useState(0);\r\n  const [entries, setEntries] = useState<TrackerEntry[]>(initialEntries);\r\n\r\n  const handleTurn = () => {\r\n    if (entries.length > 0) {\r\n      let tempArray = [...entries];\r\n      let entry = tempArray.shift()!;\r\n      tempArray.push(entry);\r\n      setEntries(tempArray);\r\n      window.localStorage.setItem('trackerEntries', JSON.stringify(tempArray));\r\n    }\r\n  }\r\n\r\n  const sortEntries = (entries: TrackerEntry[]) => {\r\n    if (entries.length > 0) {\r\n      return [...entries].sort((firstEntry: TrackerEntry, secondEntry: TrackerEntry) => {\r\n        return (secondEntry.initiative + (secondEntry.isGunReady ? isGunReadyInitiative : 0)) - (firstEntry.initiative + (firstEntry.isGunReady ? isGunReadyInitiative : 0));\r\n      });\r\n    } else {\r\n      return entries;\r\n    }\r\n  }\r\n\r\n  const addEntry = () => {\r\n    if (newEntryName && newEntryInitiative) {\r\n      let newEntry = new TrackerEntry(idCounter, newEntryName, newEntryHp, newEntryInitiative);\r\n      let tempArray = [...entries, newEntry];\r\n\r\n      setEntries(tempArray);\r\n      window.localStorage.setItem('trackerEntries', JSON.stringify(tempArray));\r\n      setNewEntryName('');\r\n      setNewEntryHp('');\r\n      setNewEntryInitiative(0);\r\n      setIdCounter(idCounter + 1);\r\n      window.localStorage.setItem('trackerIdCounter', String(idCounter + 1));\r\n    }\r\n  }\r\n\r\n  const removeEntry = (id: number) => {\r\n    const tempArray = entries.filter((entry: TrackerEntry) => {\r\n      return entry.id !== id;\r\n    });\r\n    setEntries(tempArray);\r\n    window.localStorage.setItem('trackerEntries', JSON.stringify(tempArray));\r\n  }\r\n\r\n  const toggleEditEntry = (id: number, name: string, hp: string, initiative: number) => {\r\n    let tempArray = [...entries];\r\n    let entry = tempArray.find((entry: TrackerEntry) => {\r\n      return entry.id === id;\r\n    });\r\n\r\n    if (entry) {\r\n      entry.name = name;\r\n      entry.hp = hp;\r\n      entry.initiative = initiative;\r\n      setEntries(tempArray);\r\n      window.localStorage.setItem('trackerEntries', JSON.stringify(tempArray));\r\n    }\r\n  }\r\n\r\n  const toggleGunReady = (id: number) => {\r\n    let tempArray = [...entries];\r\n    let filteredEntry = tempArray.find((entry: TrackerEntry) => {\r\n      return entry.id === id;\r\n    })!;\r\n    filteredEntry.isGunReady = !filteredEntry.isGunReady;\r\n    setEntries(tempArray);\r\n    window.localStorage.setItem('trackerEntries', JSON.stringify(tempArray));\r\n  }\r\n\r\n  const moveEntryUp = (id: number) => {\r\n    if (entries.length >= 2) {\r\n      let tempArray: TrackerEntry[] = [...entries];\r\n      let entryIndex: number = entries.findIndex((entry: TrackerEntry) => {\r\n        return entry.id === id;\r\n      });\r\n      if (entryIndex === -1) {\r\n        return;\r\n      } else if (entryIndex === 0) {\r\n        let entry = tempArray.shift()!;\r\n        tempArray.push(entry);\r\n      } else {\r\n        let previousEntryIndex: number = entryIndex - 1;\r\n        let entry = tempArray.splice(entryIndex, 1);\r\n        tempArray.splice(previousEntryIndex, 0, entry[0]);\r\n      }\r\n      setEntries(tempArray);\r\n      window.localStorage.setItem('trackerEntries', JSON.stringify(tempArray));\r\n    }\r\n  }\r\n\r\n  const moveEntryDown = (id: number) => {\r\n    if (entries.length >= 2) {\r\n      if (entries.length >= 2) {\r\n        let tempArray: TrackerEntry[] = [...entries];\r\n        let entryIndex: number = entries.findIndex((entry: TrackerEntry) => {\r\n          return entry.id === id;\r\n        });\r\n        if (entryIndex === -1) {\r\n          return;\r\n        } else if (entryIndex === entries.length - 1) {\r\n          let entry = tempArray.pop()!;\r\n          tempArray.unshift(entry);\r\n        } else {\r\n          let nextEntryIndex: number = entryIndex + 1;\r\n          let entry = tempArray.splice(nextEntryIndex, 1);\r\n          tempArray.splice(entryIndex, 0, entry[0]);\r\n        }\r\n        setEntries(tempArray);\r\n        window.localStorage.setItem('trackerEntries', JSON.stringify(tempArray));\r\n      }\r\n    }\r\n  }\r\n\r\n  const clear = () => {\r\n    setEntries([]);\r\n    setIdCounter(0);\r\n    window.localStorage.setItem('trackerEntries', JSON.stringify([]));\r\n    window.localStorage.setItem('trackerIdCounter', JSON.stringify(0));\r\n  }\r\n\r\n  const moveEntry = useCallback(\r\n    (dragIndex: number, hoverIndex: number) => {\r\n      const dragEntry = entries[dragIndex];\r\n      const tempArray = update(entries, {\r\n        $splice: [\r\n          [dragIndex, 1],\r\n          [hoverIndex, 0, dragEntry],\r\n        ],\r\n      });\r\n      setEntries(tempArray);\r\n      window.localStorage.setItem('trackerEntries', JSON.stringify(tempArray));\r\n    },\r\n    [entries],\r\n  )\r\n\r\n  return (\r\n    <div className=\"initiative-tracker\">\r\n      <div className=\"initiative-tracker__header\">\r\n        <span className=\"initiative-tracker__header-title\">Initiative Tracker</span>\r\n        <CustomButton\r\n          icon\r\n          disabled={entries.length < 2}\r\n          title=\"Turn\"\r\n          onClick={handleTurn}\r\n        >\r\n          <FaLongArrowAltDown size=\"1.25em\" />\r\n        </CustomButton>\r\n        <CustomButton\r\n          icon\r\n          disabled={entries.length === 0}\r\n          title=\"Sort\"\r\n          onClick={() => { const tempArray = sortEntries(entries); setEntries(tempArray); window.localStorage.setItem('trackerEntries', JSON.stringify(tempArray)); }}\r\n        >\r\n          <FaSortAmountDown size=\"1.25em\" />\r\n        </CustomButton>\r\n        <CustomButton\r\n          icon\r\n          disabled={entries.length === 0}\r\n          title=\"Clear\"\r\n          onClick={clear}\r\n        >\r\n          <FaTimes size=\"1.25em\" />\r\n        </CustomButton>\r\n        <CustomMenu\r\n          activatorIcon\r\n          activatorContent={<FaCog size=\"1.25em\" />}\r\n        >\r\n          <CustomMenuItem\r\n            onClick={() => {setGunReadinessEnabled(!gunReadinessEnabled)}}\r\n            clicked={gunReadinessEnabled}\r\n          >\r\n            Call of Cthulhu\r\n          </CustomMenuItem>\r\n        </CustomMenu>\r\n      </div>\r\n      <div className=\"initiative-tracker__body\">\r\n        {(() => {\r\n          if (entries.length > 0) {\r\n            return (\r\n              <div style={{width: '100%'}}>\r\n                <div className=\"initiative-tracker__data\">\r\n                  {entries\r\n                    .map((entry: TrackerEntry, index: number) => {\r\n                      return (\r\n                        <InitiativeTrackerEntry\r\n                          key={entry.id}\r\n                          id={entry.id}\r\n                          index={index}\r\n                          name={entry.name}\r\n                          hp={entry.hp}\r\n                          initiative={entry.initiative}\r\n                          isGunReady={entry.isGunReady}\r\n                          gunReadinessEnabled={gunReadinessEnabled}\r\n                          onToggleGunReady={toggleGunReady}\r\n                          onEditEntry={toggleEditEntry}\r\n                          onRemoveEntry={removeEntry}\r\n                          onMoveEntryUp={moveEntryUp}\r\n                          onMoveEntryDown={moveEntryDown}\r\n                          onMove={moveEntry}\r\n                        />\r\n                      )\r\n                    })\r\n                  }\r\n                </div>\r\n              </div>\r\n            );\r\n          } else {\r\n            return <div className=\"initiative-tracker__no-data\">No Data</div>\r\n          }\r\n        })()}\r\n      </div>\r\n      <div className=\"initiative-tracker__footer\">\r\n        <CustomInput\r\n          label=\"Name\"\r\n          type=\"text\"\r\n          value={newEntryName}\r\n          onChange={(event: React.ChangeEvent<HTMLInputElement>) => setNewEntryName(event.target.value)}\r\n        />\r\n        <CustomInput\r\n          label=\"HP\"\r\n          type=\"text\"\r\n          value={newEntryHp}\r\n          onChange={(event: React.ChangeEvent<HTMLInputElement>) => setNewEntryHp(event.target.value)}\r\n        />\r\n        <CustomInput\r\n          label=\"Initiative\"\r\n          type=\"number\"\r\n          value={newEntryInitiative}\r\n          onChange={(event: React.ChangeEvent<HTMLInputElement>) => setNewEntryInitiative(Number(event.target.value))}\r\n        />\r\n        <CustomButton\r\n          icon\r\n          disabled={!Boolean(newEntryName) || !Boolean(newEntryInitiative)}\r\n          onClick={addEntry}\r\n          title=\"Add record\"\r\n        >\r\n          <FaPlus size=\"1.25em\"/>\r\n        </CustomButton>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InitiativeTracker;\r\n","import React from 'react';\n\nimport { DndProvider } from 'react-dnd';\n\nimport HTML5Backend from 'react-dnd-html5-backend';\nimport TouchBackend from 'react-dnd-touch-backend';\nimport MultiBackend, { TouchTransition } from 'react-dnd-multi-backend';\n\nimport InitiativeTracker from './InitiativeTracker';\n\nconst HTML5toTouch = {\n  backends: [\n    {\n      backend: HTML5Backend\n    },\n    {\n      backend: TouchBackend, // Note that you can call your backends with options\n      preview: true,\n      transition: TouchTransition\n    }\n  ]\n};\n\nconst App: React.FC = () => {\n  return (\n    <div style={{maxWidth: 800, margin: 'auto'}}>\n      <DndProvider backend={MultiBackend} options={HTML5toTouch}>\n        <InitiativeTracker />\n      </DndProvider>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}