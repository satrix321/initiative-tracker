{"version":3,"sources":["CustomInput.tsx","CustomButton.tsx","CustomButtonGroup.tsx","CustomMenu.tsx","CustomMenuItem.tsx","InitiativeTracker.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["CustomInput","props","id","controlGroup","input","uniqueId","className","htmlFor","this","label","fullWidth","type","defaultValue","value","onChange","onFocus","focusInput","onBlur","blurInput","ReactDOM","findDOMNode","querySelector","undefined","document","activeElement","classList","remove","event","target","parentElement","add","validity","valid","React","Component","CustomButton","icon","clicked","secondary","onClick","aria-label","ariaLabel","children","CustomButtonGroup","CustomMenu","state","activatorClick","setState","active","activatorIcon","activatorSecondary","activatorContent","CustomMenuItem","InitiativeTrackerEntry","name","hp","initiative","isGunReady","editMode","InitiativeTracker","idCounter","isGunReadyInitiative","addEntry","addEntryName","addEntryInitiative","newEntry","addEntryHp","tempArray","entries","sortEntries","length","sort","firstEntry","secondEntry","handleTurn","entry","shift","push","handleSort","handleClear","editEntryName","editEntryHp","editEntryInitiative","setAddEntryName","bind","setAddEntryHp","setAddEntryInitiative","setEditEntryName","setEditEntryHp","setEditEntryInitiative","cellPadding","align","renderEntries","size","map","key","data-id","toggleGun","moveEntryUp","moveEntryDown","toggleEditEntry","removeEntry","Number","find","entryIndex","findIndex","previousEntryIndex","splice","pop","unshift","nextEntryIndex","filter","App","style","maxWidth","margin","Boolean","window","location","hostname","match","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8cbbb2da.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from \"react-dom\";\nimport './CustomInput.scss';\nimport uniqueId from 'lodash/uniqueId';\n\ninterface CustomInputProps {\n  label?: string,\n  defaultValue?: any,\n  value?: any,\n  type?: string,\n  fullWidth?: boolean,\n  onChange: (event: React.ChangeEvent<HTMLInputElement>) => void,\n}\n\nclass CustomInput extends React.Component<CustomInputProps, {}> {\n  id: string;\n  controlGroup: HTMLElement | undefined;\n  input: HTMLInputElement | undefined;\n\n  constructor(props: any) {\n    super(props);\n    this.id = `input_${uniqueId()}`;\n  }\n\n  render() {\n    return (\n      <span className=\"control-group\">\n        <label htmlFor={this.id} className=\"label\">{this.props.label}</label>\n        <input\n          id={this.id}\n          className={`input ${this.props.fullWidth ? 'input--is-full-width' : ''}`}\n          type={this.props.type || 'text'}\n          defaultValue={this.props.defaultValue}\n          value={this.props.value || (this.props.type === 'number' && !this.props.defaultValue ? '' : this.props.value)}\n          onChange={this.props.onChange}\n          onFocus={this.focusInput}\n          onBlur={this.blurInput}\n        >\n        </input>\n      </span>\n    );\n  }\n\n  componentDidMount() {\n    this.controlGroup = ReactDOM.findDOMNode(this) as HTMLElement;\n    this.input = this.controlGroup.querySelector('.input') as HTMLInputElement;\n  }\n\n  componentDidUpdate() {\n    if (this.props.value === null || this.props.value === undefined || this.props.value === '' || this.props.value === 0) {\n      if (this.input !== document.activeElement) {\n        this.controlGroup!.classList.remove('control-group--is-active', 'control-group--has-text');\n      }\n    }\n  } \n\n  focusInput(event: React.FocusEvent<HTMLInputElement>) {\n    event.target.parentElement!.classList.add('control-group--is-active');\n  }\n\n  blurInput(event: React.FocusEvent<HTMLInputElement>) {\n    if ((event.target.value !== null && event.target.value !== undefined && event.target.value !== '') || !event.target.validity.valid) {\n      event.target.parentElement!.classList.add('control-group--has-text');\n    } else {\n      event.target.parentElement!.classList.remove('control-group--has-text');\n    }\n    event.target.parentElement!.classList.remove('control-group--is-active');\n\n    if (!event.target.validity.valid) {\n      event.target.parentElement!.classList.add('control-group--invalid');\n    } else {\n      event.target.parentElement!.classList.remove('control-group--invalid');\n    }\n  }\n}\n\nexport default CustomInput;","import React from 'react';\nimport './CustomButton.scss';\n\ninterface CustomButtonProps {\n  icon?: boolean,\n  secondary?: boolean,\n  clicked?: boolean,\n  ariaLabel?: string,\n  onClick: () => void,\n}\n\nclass CustomButton extends React.Component<CustomButtonProps, {}> {\n\n  render() {\n    return (\n      <button\n        className={`button ${this.props.icon ? 'button--icon' : ''}\n          ${this.props.clicked ? 'button--is-clicked' : ''}\n          ${this.props.secondary ? 'button--is-secondary' : ''}`}\n        onClick={this.props.onClick}\n        aria-label={this.props.ariaLabel}\n      >\n        {this.props.children}\n      </button>\n    );\n  }\n}\n\nexport default CustomButton;","import React from 'react';\nimport './CustomButtonGroup.scss';\n\ninterface CustomButtonGroupProps {\n  \n}\n\nclass CustomButtonGroup extends React.Component<CustomButtonGroupProps, {}> {\n\n  render() {\n    return (\n      <span className=\"button-group\">\n        {this.props.children}\n      </span>\n    );\n  }\n}\n\nexport default CustomButtonGroup;","import React from 'react';\nimport './CustomMenu.scss';\nimport './CustomButton.scss';\n\ninterface CustomMenuProps {\n  activatorIcon?: boolean,\n  activatorSecondary?: boolean,\n  activatorContent?: any,\n}\n\nclass CustomMenu extends React.Component<CustomMenuProps, {}> {\n  state: {\n    active: boolean,\n  };\n\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      active: false,\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"menu\">\n        <div className=\"menu__activator\">\n          <button\n            className={`button ${this.props.activatorIcon ? 'button--icon' : ''}\n              ${this.state.active ? 'button--is-clicked' : ''}\n              ${this.props.activatorSecondary ? 'button--is-secondary' : ''}`\n            }\n            onClick={this.activatorClick}\n          >\n            {this.props.activatorContent}\n          </button>\n        </div>\n        <div className={`menu__content ${this.state.active ? 'menu__content--active' : ''}`}>\n          {this.props.children}\n        </div>\n      </div>\n    );\n  }\n\n  activatorClick = () => {\n    this.setState({ active: !this.state.active });\n  }\n}\n\nexport default CustomMenu;","import React from 'react';\nimport './CustomMenuItem.scss';\n\ninterface CustomMenuItemProps {\n  clicked?: boolean,\n  onClick: () => void,\n}\n\nclass CustomMenuItem extends React.Component<CustomMenuItemProps, {}> {\n\n  render() {\n    return (\n      <div\n        className={`menu-item ${this.props.clicked ? 'menu-item--is-clicked' : ''}`}\n        onClick={this.props.onClick}\n      >\n        {this.props.children}\n      </div>\n    );\n  }\n}\n\nexport default CustomMenuItem;","import React from 'react';\r\nimport './InitiativeTracker.scss';\r\nimport { IoIosArrowUp } from \"react-icons/io\";\r\nimport { IoIosArrowDown } from \"react-icons/io\";\r\nimport { IoIosClose } from \"react-icons/io\";\r\nimport { IoIosAdd } from \"react-icons/io\";\r\nimport { IoMdCreate } from \"react-icons/io\";\r\nimport { GiPistolGun } from \"react-icons/gi\";\r\n\r\nimport CustomInput from './CustomInput';\r\nimport CustomButton from './CustomButton';\r\nimport CustomButtonGroup from './CustomButtonGroup';\r\nimport CustomMenu from './CustomMenu';\r\nimport CustomMenuItem from './CustomMenuItem';\r\n\r\nclass InitiativeTrackerEntry {\r\n  id: number;\r\n  name: string;\r\n  hp: string;\r\n  initiative: number;\r\n  isGunReady: boolean;\r\n  editMode: boolean;\r\n\r\n  constructor(id: number, name: string, hp: string, initiative: number) {\r\n    this.id = id;\r\n    this.name = name;\r\n    this.hp = hp;\r\n    this.initiative = initiative;\r\n    this.isGunReady = false;\r\n    this.editMode = false;\r\n  }\r\n}\r\n\r\nclass InitiativeTracker extends React.Component {\r\n  idCounter: number;\r\n  state: {\r\n    addEntryName: string,\r\n    addEntryHp: string,\r\n    addEntryInitiative: number,\r\n    editEntryName: string,\r\n    editEntryHp: string,\r\n    editEntryInitiative: number,\r\n    entries: InitiativeTrackerEntry[],\r\n  };\r\n  isGunReadyInitiative: number = 50;\r\n\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.idCounter = 0;\r\n    this.state = {\r\n      addEntryName: '',\r\n      addEntryHp: '',\r\n      addEntryInitiative: 0,\r\n      editEntryName: '',\r\n      editEntryHp: '',\r\n      editEntryInitiative: 0,\r\n      entries: [],\r\n    };\r\n\r\n    this.setAddEntryName = this.setAddEntryName.bind(this);\r\n    this.setAddEntryHp = this.setAddEntryHp.bind(this);\r\n    this.setAddEntryInitiative = this.setAddEntryInitiative.bind(this);\r\n\r\n    this.setEditEntryName = this.setEditEntryName.bind(this);\r\n    this.setEditEntryHp = this.setEditEntryHp.bind(this);\r\n    this.setEditEntryInitiative = this.setEditEntryInitiative.bind(this);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"initiative-tracker\">\r\n        <div className=\"initiative-tracker__header\">\r\n          <span className=\"initiative-tracker__header-title\">Initiative Tracker</span>\r\n          <CustomButton onClick={this.handleTurn}>Turn</CustomButton>\r\n          <CustomButton onClick={this.handleSort}>Sort</CustomButton>\r\n          <CustomButton onClick={this.handleClear}>Clear</CustomButton>\r\n        </div>\r\n        <div className=\"initiative-tracker__body\">\r\n          {(() => {\r\n            if (this.state.entries.length > 0) {\r\n              return (\r\n                <table className=\"initiative-tracker__table\" cellPadding=\"0\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th align=\"left\">Name</th>\r\n                      <th align=\"left\" className=\"initiative-tracker__hp-header\">HP</th>\r\n                      <th align=\"left\" className=\"initiative-tracker__initiative-header\">Initiative</th>\r\n                      <th className=\"initiative-tracker__actions-header\">Actions</th>\r\n                    </tr>\r\n                  </thead>\r\n                  {this.renderEntries()}\r\n                </table>\r\n              );\r\n            } else {\r\n              return <div className=\"initiative-tracker__no-data\">No Data</div>\r\n            }\r\n          })()}\r\n        </div>\r\n        <div className=\"initiative-tracker__footer\">\r\n          <CustomInput label=\"Name\" type=\"text\" value={this.state.addEntryName} onChange={this.setAddEntryName}/>\r\n          <CustomInput label=\"HP\" type=\"text\" value={this.state.addEntryHp} onChange={this.setAddEntryHp}/>\r\n          <CustomInput label=\"Initiative\" type=\"number\" value={this.state.addEntryInitiative} onChange={this.setAddEntryInitiative}/>\r\n          <CustomButton icon onClick={this.addEntry} ariaLabel=\"Add record\">\r\n            <IoIosAdd size=\"2em\"/>\r\n          </CustomButton>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderEntries() {\r\n    return (\r\n      <tbody>\r\n        {this.state.entries\r\n          .map((entry: InitiativeTrackerEntry) => (\r\n            <tr key={entry.id} data-id={entry.id} id={`entry_${entry.id}`}>\r\n              <td>\r\n                {(() => {\r\n                  if (!entry.editMode) {\r\n                    return entry.name;\r\n                  } else {\r\n                    return <CustomInput fullWidth type=\"text\" defaultValue={entry.name} onChange={this.setEditEntryName}/>\r\n                  }\r\n                })()}\r\n              </td>\r\n              <td>\r\n                {(() => {\r\n                  if (!entry.editMode) {\r\n                    return entry.hp;\r\n                  } else {\r\n                    return <CustomInput fullWidth type=\"text\" defaultValue={entry.hp} onChange={this.setEditEntryHp}/>\r\n                  }\r\n                })()}\r\n              </td>\r\n              <td>\r\n                {(() => {\r\n                  if (!entry.editMode) {\r\n                    return entry.isGunReady ? `${entry.initiative} (+${this.isGunReadyInitiative})` : entry.initiative;\r\n                  } else {\r\n                    return <CustomInput fullWidth type=\"number\" defaultValue={entry.initiative} onChange={this.setEditEntryInitiative}/>\r\n                  }\r\n                })()}\r\n              </td>\r\n              <td>\r\n                <div className=\"initiative-tracker__actions-container initiative-tracker__actions-container--desktop-only\">\r\n                  <CustomButton\r\n                    icon\r\n                    secondary\r\n                    clicked={entry.isGunReady}\r\n                    onClick={this.toggleGun.bind(this, entry.id)}\r\n                    ariaLabel=\"Gun ready\"\r\n                  >\r\n                    <GiPistolGun size=\"1.5em\" />\r\n                  </CustomButton>\r\n                  <CustomButtonGroup>\r\n                    <CustomButton\r\n                      icon\r\n                      secondary\r\n                      onClick={this.moveEntryUp.bind(this, entry.id)}\r\n                      ariaLabel=\"Move up\"\r\n                    >\r\n                      <IoIosArrowUp />\r\n                    </CustomButton>\r\n                    <CustomButton\r\n                      icon\r\n                      secondary\r\n                      onClick={this.moveEntryDown.bind(this, entry.id)}\r\n                      ariaLabel=\"Move down\"\r\n                    >\r\n                      <IoIosArrowDown />\r\n                    </CustomButton>\r\n                  </CustomButtonGroup>\r\n                  <CustomButton\r\n                    icon\r\n                    secondary\r\n                    clicked={entry.editMode}\r\n                    onClick={this.toggleEditEntry.bind(this, entry.id)}\r\n                    ariaLabel=\"Edit mode\"\r\n                  >\r\n                    <IoMdCreate size=\"1.5em\" />\r\n                  </CustomButton>\r\n                  <CustomButton\r\n                    icon\r\n                    secondary\r\n                    onClick={this.removeEntry.bind(this, entry.id)}\r\n                    ariaLabel=\"Remove entry\"\r\n                  >\r\n                    <IoIosClose size=\"2em\" />\r\n                  </CustomButton>\r\n                </div>\r\n                <div className=\"initiative-tracker__actions-container initiative-tracker__actions-container--mobile-only\">\r\n                  <CustomButtonGroup>\r\n                    <CustomButton icon secondary onClick={this.moveEntryUp.bind(this, entry.id)} ariaLabel=\"Move up\">\r\n                      <IoIosArrowUp />\r\n                    </CustomButton>\r\n                    <CustomButton icon secondary onClick={this.moveEntryDown.bind(this, entry.id)} ariaLabel=\"Move down\">\r\n                      <IoIosArrowDown />\r\n                    </CustomButton>\r\n                  </CustomButtonGroup>\r\n                  <CustomMenu\r\n                    activatorIcon\r\n                    activatorSecondary\r\n                    activatorContent={<IoIosArrowDown size=\"1.5em\" />}\r\n                  >\r\n                    <CustomMenuItem onClick={this.toggleGun.bind(this, entry.id)} clicked={entry.isGunReady}>Gun</CustomMenuItem>\r\n                    <CustomMenuItem onClick={this.toggleEditEntry.bind(this, entry.id)} clicked={entry.editMode}>Edit</CustomMenuItem>\r\n                    <CustomMenuItem onClick={this.removeEntry.bind(this, entry.id)}>Delete</CustomMenuItem>\r\n                  </CustomMenu>\r\n                </div>\r\n              </td>\r\n            </tr>\r\n          ))\r\n        }\r\n      </tbody>\r\n    );\r\n  }\r\n\r\n  setAddEntryName(event: React.ChangeEvent<HTMLInputElement>) {\r\n    this.setState({ addEntryName: event.target.value });\r\n  }\r\n\r\n  setAddEntryHp(event: React.ChangeEvent<HTMLInputElement>) {\r\n    this.setState({ addEntryHp: event.target.value });\r\n  }\r\n\r\n  setAddEntryInitiative(event: React.ChangeEvent<HTMLInputElement>) {\r\n    this.setState({ addEntryInitiative: Number(event.target.value) });\r\n  }\r\n\r\n  setEditEntryName(event: React.ChangeEvent<HTMLInputElement>) {\r\n    this.setState({ editEntryName: event.target.value });\r\n  }\r\n\r\n  setEditEntryHp(event: React.ChangeEvent<HTMLInputElement>) {\r\n    this.setState({ editEntryHp: event.target.value });\r\n  }\r\n\r\n  setEditEntryInitiative(event: React.ChangeEvent<HTMLInputElement>) {\r\n    this.setState({ editEntryInitiative: Number(event.target.value) });\r\n  }\r\n\r\n  addEntry = () => {\r\n    if (this.state.addEntryName && this.state.addEntryInitiative) {\r\n      let newEntry = new InitiativeTrackerEntry(this.idCounter, this.state.addEntryName, this.state.addEntryHp, this.state.addEntryInitiative);\r\n      let tempArray = [...this.state.entries, newEntry];\r\n\r\n      this.setState({\r\n        entries: tempArray,\r\n        addEntryName: '',\r\n        addEntryHp: '',\r\n        addEntryInitiative: 0,\r\n      });\r\n      this.idCounter++;\r\n    }\r\n  }\r\n\r\n  sortEntries = (entries: InitiativeTrackerEntry[]) => {\r\n    if (entries.length > 0) {\r\n      return [...entries].sort((firstEntry: InitiativeTrackerEntry, secondEntry: InitiativeTrackerEntry) => {\r\n        return (secondEntry.initiative + (secondEntry.isGunReady ? this.isGunReadyInitiative : 0)) - (firstEntry.initiative + (firstEntry.isGunReady ? this.isGunReadyInitiative : 0));\r\n      });\r\n    } else {\r\n      return entries;\r\n    }\r\n  }\r\n\r\n  toggleGun(id: number) {\r\n    let tempArray = [...this.state.entries];\r\n    let entry = tempArray.find((entry: InitiativeTrackerEntry) => {\r\n      return entry.id === id;\r\n    })!;\r\n    entry.isGunReady = !entry.isGunReady;\r\n    this.setState({ entries: tempArray });\r\n  }\r\n\r\n  moveEntryUp(id: number) {\r\n    if (this.state.entries.length >= 2) {\r\n      let tempArray: InitiativeTrackerEntry[] = [...this.state.entries];\r\n      let entryIndex: number = this.state.entries.findIndex((entry: InitiativeTrackerEntry) => {\r\n        return entry.id === id;\r\n      });\r\n      if (entryIndex === -1) {\r\n        return;\r\n      } else if (entryIndex === 0) {\r\n        let entry = tempArray.shift()!;\r\n        tempArray.push(entry);\r\n      } else {\r\n        let previousEntryIndex: number = entryIndex - 1;\r\n        let entry = tempArray.splice(entryIndex, 1);\r\n        tempArray.splice(previousEntryIndex, 0, entry[0]);\r\n      }\r\n      this.setState({ entries: tempArray })\r\n    }\r\n  }\r\n\r\n  moveEntryDown(id: number) {\r\n    if (this.state.entries.length >= 2) {\r\n      if (this.state.entries.length >= 2) {\r\n        let tempArray: InitiativeTrackerEntry[] = [...this.state.entries];\r\n        let entryIndex: number = this.state.entries.findIndex((entry: InitiativeTrackerEntry) => {\r\n          return entry.id === id;\r\n        });\r\n        if (entryIndex === -1) {\r\n          return;\r\n        } else if (entryIndex === this.state.entries.length - 1) {\r\n          let entry = tempArray.pop()!;\r\n          tempArray.unshift(entry);\r\n        } else {\r\n          let nextEntryIndex: number = entryIndex + 1;\r\n          let entry = tempArray.splice(nextEntryIndex, 1);\r\n          tempArray.splice(entryIndex, 0, entry[0]);\r\n        }\r\n        this.setState({ entries: tempArray })\r\n      }\r\n    }\r\n  }\r\n\r\n  removeEntry(id: number) {\r\n    this.setState({ \r\n      entries: this.state.entries.filter((entry: InitiativeTrackerEntry) => {\r\n        return entry.id !== id;\r\n      }),\r\n    });\r\n  }\r\n\r\n  toggleEditEntry(id: number) {\r\n    let tempArray = [...this.state.entries];\r\n    let entry = tempArray.find((entry: InitiativeTrackerEntry) => {\r\n      return entry.id === id;\r\n    })!;\r\n\r\n    if (entry.editMode) {\r\n      entry.name = this.state.editEntryName;\r\n      entry.hp = this.state.editEntryHp;\r\n      entry.initiative = this.state.editEntryInitiative;\r\n      entry.editMode = !entry.editMode;\r\n      this.setState({ entries: tempArray });\r\n    } else {\r\n      entry.editMode = !entry.editMode;\r\n      this.setState({ \r\n        entries: tempArray,\r\n        editEntryName: entry.name,\r\n        editEntryHp: entry.hp,\r\n        editEntryInitiative: entry.initiative,\r\n      });\r\n    }\r\n  }\r\n\r\n  handleTurn = () => {\r\n    if (this.state.entries.length > 0) {\r\n      let tempArray = [...this.state.entries];\r\n      let entry = tempArray.shift()!;\r\n      tempArray.push(entry);\r\n      this.setState({\r\n        entries: tempArray,\r\n      });\r\n    }\r\n  }\r\n\r\n  handleSort = () => {\r\n    this.setState({\r\n      entries: this.sortEntries(this.state.entries),\r\n    });\r\n  }\r\n\r\n  handleClear = () => {\r\n    this.setState({\r\n      entries: [],\r\n    });\r\n  }\r\n}\r\n\r\nexport default InitiativeTracker;\r\n","import React from 'react';\nimport InitiativeTracker from './InitiativeTracker';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div style={{maxWidth: 700, margin: 'auto'}}>\n        <InitiativeTracker></InitiativeTracker>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}